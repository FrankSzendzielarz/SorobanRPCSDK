//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Stellar.RPC
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetFeeStatsResult
    {
        /// <summary>
        /// Inclusion fee distribution statistics for Soroban transactions
        /// </summary>
        [Newtonsoft.Json.JsonProperty("sorobanInclusionFee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SorobanInclusionFee SorobanInclusionFee { get; set; }

        /// <summary>
        /// Fee distribution statistics for Stellar (i.e. non-Soroban) transactions. Statistics are normalized per operation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("inclusionFee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public InclusionFee InclusionFee { get; set; }

        /// <summary>
        /// The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("latestLedger", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long LatestLedger { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static GetFeeStatsResult FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<GetFeeStatsResult>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SorobanInclusionFee
    {
        /// <summary>
        /// Maximum fee
        /// </summary>
        [Newtonsoft.Json.JsonProperty("max", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Max { get; set; }

        /// <summary>
        /// Minimum fee
        /// </summary>
        [Newtonsoft.Json.JsonProperty("min", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Min { get; set; }

        /// <summary>
        /// Fee value which occurs the most often
        /// </summary>
        [Newtonsoft.Json.JsonProperty("mode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Mode { get; set; }

        /// <summary>
        /// 10th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p10", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P10 { get; set; }

        /// <summary>
        /// 20th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p20", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P20 { get; set; }

        /// <summary>
        /// 30th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p30", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P30 { get; set; }

        /// <summary>
        /// 40th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p40", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P40 { get; set; }

        /// <summary>
        /// 50th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p50", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P50 { get; set; }

        /// <summary>
        /// 60th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p60", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P60 { get; set; }

        /// <summary>
        /// 70th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p70", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P70 { get; set; }

        /// <summary>
        /// 80th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p80", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P80 { get; set; }

        /// <summary>
        /// 90th nearest-rank fee percentile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p90", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P90 { get; set; }

        /// <summary>
        /// 95th nearest-rank fee percentile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p95", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P95 { get; set; }

        /// <summary>
        /// 99th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p99", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P99 { get; set; }

        /// <summary>
        /// How many transactions are part of the distribution
        /// </summary>
        [Newtonsoft.Json.JsonProperty("transactionCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TransactionCount { get; set; }

        /// <summary>
        /// How many consecutive ledgers form the distribution
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ledgerCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long LedgerCount { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static SorobanInclusionFee FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<SorobanInclusionFee>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class InclusionFee
    {
        /// <summary>
        /// Maximum fee
        /// </summary>
        [Newtonsoft.Json.JsonProperty("max", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Max { get; set; }

        /// <summary>
        /// Minimum fee
        /// </summary>
        [Newtonsoft.Json.JsonProperty("min", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Min { get; set; }

        /// <summary>
        /// Fee value which occurs the most often
        /// </summary>
        [Newtonsoft.Json.JsonProperty("mode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Mode { get; set; }

        /// <summary>
        /// 10th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p10", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P10 { get; set; }

        /// <summary>
        /// 20th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p20", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P20 { get; set; }

        /// <summary>
        /// 30th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p30", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P30 { get; set; }

        /// <summary>
        /// 40th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p40", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P40 { get; set; }

        /// <summary>
        /// 50th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p50", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P50 { get; set; }

        /// <summary>
        /// 60th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p60", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P60 { get; set; }

        /// <summary>
        /// 70th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p70", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P70 { get; set; }

        /// <summary>
        /// 80th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p80", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P80 { get; set; }

        /// <summary>
        /// 90th nearest-rank fee percentile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p90", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P90 { get; set; }

        /// <summary>
        /// 95th nearest-rank fee percentile.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p95", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P95 { get; set; }

        /// <summary>
        /// 99th nearest-rank fee percentile
        /// </summary>
        [Newtonsoft.Json.JsonProperty("p99", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string P99 { get; set; }

        /// <summary>
        /// How many transactions are part of the distribution
        /// </summary>
        [Newtonsoft.Json.JsonProperty("transactionCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TransactionCount { get; set; }

        /// <summary>
        /// How many consecutive ledgers form the distribution
        /// </summary>
        [Newtonsoft.Json.JsonProperty("ledgerCount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long LedgerCount { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());

        }
        public static InclusionFee FromJson(string data)
        {

            return Newtonsoft.Json.JsonConvert.DeserializeObject<InclusionFee>(data, new Newtonsoft.Json.JsonSerializerSettings());

        }

    }
}