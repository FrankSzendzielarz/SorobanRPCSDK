//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Stellar.RPC
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetLedgerEntriesResult
    {
        /// <summary>
        /// The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("latestLedger")]
        public long LatestLedger { get; set; }

        /// <summary>
        /// Array of objects containing all found ledger entries
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("entries")]
        public System.Collections.Generic.ICollection<Entries> Entries { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Serialize(this, options);

        }
        public static GetLedgerEntriesResult FromJson(string data)
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Deserialize<GetLedgerEntriesResult>(data, options);

        }

    }

    /// <summary>
    /// Object containing information about an existing ledger entry.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Entries
    {
        /// <summary>
        /// The key of the ledger entry (serialized in a base64 string).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("key")]
        public string Key { get; set; }

        /// <summary>
        /// The current value of the given ledger entry (serialized in a base64 string).
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("xdr")]
        public string Xdr { get; set; }

        /// <summary>
        /// The ledger sequence number of the last time this entry was updated.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lastModifiedLedgerSeq")]
        public long LastModifiedLedgerSeq { get; set; }

        /// <summary>
        /// Sequence number of the ledger.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("liveUntilLedgerSeq")]
        public long LiveUntilLedgerSeq { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Serialize(this, options);

        }
        public static Entries FromJson(string data)
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Deserialize<Entries>(data, options);

        }

    }
}