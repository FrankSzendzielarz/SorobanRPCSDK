//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Stellar.RPC
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.0.0)")]
    [ProtoBuf.ProtoContract] public partial class GetVersionInfoResult
    {
        /// <summary>
        /// The version of the RPC server.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("version")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [ProtoBuf.ProtoMember(1)] public string  Version { get; set; }

        /// <summary>
        /// The commit hash of the RPC server.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("commit_hash")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [ProtoBuf.ProtoMember(2)] public string  Commit_hash { get; set; }

        /// <summary>
        /// The build timestamp of the RPC server.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("build_time_stamp")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [ProtoBuf.ProtoMember(3)] public string  Build_time_stamp { get; set; }

        /// <summary>
        /// The version of the Captive Core.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("captive_core_version")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [ProtoBuf.ProtoMember(4)] public string  Captive_core_version { get; set; }

        /// <summary>
        /// The protocol version.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("protocol_version")]
        [ProtoBuf.ProtoMember(5)] public int  Protocol_version { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

        public string ToJson()
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Serialize(this, options);

        }
        public static GetVersionInfoResult FromJson(string data)
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Deserialize<GetVersionInfoResult>(data, options);

        }

    }
}